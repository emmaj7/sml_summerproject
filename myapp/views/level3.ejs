<!--
Level 3.
Emma Johansson
Last updated: 2019-07-25
-->

<!DOCTYPE html>
<html lang="en">
  <head>
    <title>TRIP TO MARS</title>
    <!-- This partial contains all imports. -->
    <% include partials/imports.ejs%>
  </head>
  <body>
    <div class="text-center" style="height:65px">
      <h1 class="text-center" style="font-family: courier; margin-top: 10px; padding:0px; color:white; font-weight:bold;">TRIP TO MARS: level 3</h1>
    </div>
    <div>
      <span id="placement"></span>
      <xml id="toolbox" style="display: none">
        <block type="controls_repeat_ext"></block>
        <block type="math_number"></block>
        <block type="forward_block"></block>
        <block type="backward_block"></block>
        <block type="turn_block_left"></block>
        <block type="turn_block_right"></block>
      </xml>
      <!-- This partial has all the relevant code related to the simulation window. -->
      <% include partials/simulationWindow.ejs %>
      <div class="d-flex justify-content-center my-5" style="z-index:1000;">
        <!-- This partial contains the spinner shown before the rover starts moving. -->
        <% include partials/spinner.ejs %>
      </div>
    </div>
    <div class="text-center" id="buttonDiv" style="margin-top: 825px;">
      <!-- This partial contains function which shows/hides run/cancel-buttons. -->
      <% include partials/runOrCancelBtns.ejs %>
    </div>
    <div>
      <!-- This partial contains the help-tab.  -->
      <% include partials/helpTab.ejs %>

      <!-- This partial contains modal shown if goal is reached. -->
      <% include partials/modal3.ejs %>

      <!-- This partial contains modal shown if goal is not reached. OBS! FUNGERAR EJ-->
      <% include partials/tryAgainModal.ejs %>

      <!-- This partial contains modal shown if obstacle is hit. OBS! FUNGERAR EJ -->
      <% include partials/hitModal.ejs %>

      <!-- This partial contains modal shown if wall is hit. OBS! FUNGERAR EJ -->
      <% include partials/wallModal.ejs %>

      <!-- This partial has the code related to running the code on the car itself. -->
      <script type="text/javascript">
        <% include partials/runOnCarFunctions.js %>
      </script>
    </div>
  </body>
  <script>
    // This partial contains functions calculating positioning of workspace
    <% include partials/workspacePlacementFunctions.js %>

    // This function is the same for all pages.
    <% include partials/runCodeFunction.js %>

    var workspaceTop = placeWorkspaceTop();

    var workspaceLeft = placeWorkspaceLeft();
    // Inserting positioning in string
    var string = `<div id="blocklyDiv" style="position: absolute; z-index: 100; height: 800px; width: 800px; margin-left:${workspaceLeft}px; top:${workspaceTop}px;"></div>`;
    document.getElementById("placement").innerHTML = string;
    var workspace = Blockly.inject('blocklyDiv',
                                  {toolbox: document.getElementById('toolbox'),
                                  verticalLayout: true,
                                  trashcan: true,
                                  scrollbars: false,
                                  theme: Blockly.Themes.HighContrast});
    // ID generated uniquely for each window.
    var unique_id = <%= id %>
    console.log('Window id: ', unique_id);
    // Generates html for button redirecting to the last page, and passing along id in the URL OBS! Rensa bort!!!!
    var buttonStr = `<a href="#"><button class="cool-btn cool-btn2 btn1 btn" id="btn1" style="text-decoration: none !important; margin-left:10px; margin-right: 10px;" onclick="postCodeToCar(getRequest)"><p style="position: relative; z-index: 4000; margin-bottom: 0px;">Send</p></button></a>`;
    document.getElementById("runOnRoverBtn").innerHTML = buttonStr;
    // The position of the goal for level 3.
    var goal_coords = {'x': 1.1, 'y': -0.8, 'yaw': 0};
    // Position of obstacles on level 3 o.3 och 0.15 innan
    var obstacle_coords = [{x: 0.35, y: -0.5, yaw: 0, size: 0.225},
                          {x: 0.75, y: 0, yaw: 0, size: 0.1125},
                          {x: 0.15, y: -1.1, yaw: 0, size: 0.225},
                          {x: -0.5, y: 0.4, yaw: 0, size: 0.1125}];
    var level = 3;
    var runningSimulation = false;
    let cancel_simulation = false;
    function cancelSimulation(){
      cancel_simulation = true;
    }

    // Checking which button should be shown (run or cancel)
    runOrCancel();
  </script>
</html>
