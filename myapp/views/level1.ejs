<!--
Level 1.
Emma Johansson
Last updated: 2019-07-09
-->

<!DOCTYPE html>
<html lang="en">
  <head>
    <title>TRIP TO MARS</title>
    <!-- This partial contains all imports. -->
    <% include partials/imports.ejs %>
  </head>
  <body>
    <div id="headerThings" style="height:65px">
      <h1 style="font-family: courier; margin-top: 10px; padding:0px; color:white; font-weight:bold; text-align:center;">TRIP TO MARS: level 1</h1>
    </div>
    <div>
        <!-- <div id="blocklyDiv" style="height: 800px; width: 800px; margin-left:120px;"></div> -->
        <span id="placement"></span>
        <xml id="toolbox" style="display: none">
          <block type="forward_block"></block>
          <block type="backward_block"></block>
          <block type="turn_block_left"></block>
          <block type="turn_block_right"></block>
        </xml>
        <!-- This partial has all the relevant code related to the simulation window. -->
          <% include partials/simulationWindow.ejs %>
    </div>
    <div class="text-center" id="buttonDiv" style="margin-top: 45%;">
      <!-- This partial contains function which shows/hides run/cancel-buttons. -->
      <% include partials/whichButton.ejs %>
    </div>
  <div>
    <!-- This partial contains the help-tab.  -->
    <% include partials/helpTab.ejs %>

    <!-- This partial contains modal shown if goal is reached. -->
    <% include partials/modal1and2.ejs %>

    <!-- This partial contains modal shown if goal is not reached. -->
    <% include partials/tryAgainModal.ejs %>

    <!-- This partial contains modal shown if obstacle is hit. -->
    <% include partials/hitModal.ejs %>

    <!-- This partial contains modal shown if wall is hit. -->
    <% include partials/wallModal.ejs %>

    <!-- This partial contains modal shown if help-button is clicked. -->
    <% include partials/tutorial.ejs %>

    <% include partials/spinner.ejs %>

  </div>

  </body>
  <script>

    // Function making the placement (left margin) of the workspace dynamic
    function placeWorkspaceLeft(){
      var windowWidth = window.innerWidth;
      var marginLeftWorkspace = (((windowWidth/2)-800)/2)+(((windowWidth/2)-800)/4);
      marginLeftWorkspace = Math.ceil(marginLeftWorkspace);
      return marginLeftWorkspace;
    }

    // Function making the placement (top margin) of the workspace dynamic
    function placeWorkspaceTop(){
      var windowHeight = window.innerHeight;
      console.log("height, enligt workspace: " + windowHeight);
      var marginTopWorkspace = (windowHeight-800)*0.35;
      // var marginLeftSimulation = 3*(((windowWidth/2)-800)/2)+800;
      marginTopWorkspace = Math.ceil(marginTopWorkspace);
      console.log("marginTop, enligt workspace: " + marginTopWorkspace);
      return marginTopWorkspace;
    }

    var workspaceTop = placeWorkspaceTop();
    var workspaceLeft = placeWorkspaceLeft();


    // Inserting positioning in string
    var string = `<div id="blocklyDiv" style="position:absolute; z-index: 100; height: 800px; width: 800px; margin-left:${workspaceLeft}px; top:${workspaceTop}px;"></div>`;
    document.getElementById("placement").innerHTML = string;

    // Injecting workspace into div
    var workspace = Blockly.inject('blocklyDiv',
                    {toolbox: document.getElementById('toolbox'),
                    verticalLayout: true,
                    trashcan: true,
                    scrollbars: false,
                    theme: Blockly.Themes.HighContrast});
    // ID generated uniquely for each window.
    var unique_id = (Math.random()*Math.pow(10,18)).toString();
    // The position of the goal for level 1.
    var goal_coords = {'x': 0.80, 'y': 0.9, 'yaw': 0};
    // Position of obstacles on level
    var obstacle_coords = [];
    var at_goal = false;
    var level = 1;
    var modalBodyStr = `<p style="font-size: 25px;">You solved level ${level} with the following Python code:</p>
                        <div class="code-box" style="width: 200px; margin: 0 auto;">
                            <pre style="text-align: left;" id='code'></pre>
                        </div>
                        <p style="font-size: 25px;"> Continue to level ${level+1}?</p>`;
    var modalFooterStr = `<a href="/level${level}" ><button class="cool-btn2 btn1 btn" id="btn1" style="text-decoration: none !important; margin-left:10px; margin-right: 10px;"><p style="position:relative; z-index: 4000; margin-bottom: 0px;">Cancel</p></button></a>
    <a href="/level${level+1}" ><button class="cool-btn2 btn1 btn" id="btn1" style="text-decoration: none !important; margin-left:10px; margin-right: 10px;"><p style="position: relative; z-index: 4000; margin-bottom: 0px;">OK</p></button></a>`
    document.getElementById("modalBody").innerHTML = modalBodyStr;
    document.getElementById("modalFooter").innerHTML = modalFooterStr;

    var runningSimulation = false;
    let cancel_simulation = false;
    function cancelSimulation(){
      cancel_simulation = true;
    }
    // This function is the same for all pages.
    <% include partials/runCodeFunction.js %>
    // Checking which button should be shown
    whichButton();
  </script>
</html>
